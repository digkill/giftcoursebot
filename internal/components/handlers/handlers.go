package handlers

import (
	"github.com/digkill/giftcoursebot/internal/components/db"
	"github.com/digkill/giftcoursebot/internal/components/logger"
	"github.com/digkill/giftcoursebot/internal/helpers"
	"github.com/digkill/giftcoursebot/internal/models"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"time"
)

func HandleMessage(bot *tgbotapi.BotAPI, userModel *models.UserModel, lessonModel *models.LessonModel, msg *tgbotapi.Message, lg *logger.Log) {
	switch msg.Text {
	case "/start":
		// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		userModel.DB.Exec("INSERT IGNORE INTO users (chat_id, start_date) VALUES (?, ?)", msg.Chat.ID, time.Now())

		welcomeMessage := `üéâ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –ø–æ–¥–∞—Ä–æ–∫-–∫—É—Ä—Å!* üéÅ  

–¢—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –æ—Ç–∫—Ä—ã–ª –¥–≤–µ—Ä—å –≤ –º–∞–ª–µ–Ω—å–∫–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –∑–Ω–∞–Ω–∏–π, –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è –∏ —Ä–∞–¥–æ—Å—Ç–∏! üí°
üìö *–ö–∞–∂–¥—ã–π –¥–µ–Ω—å* —Ç–µ–±—è –∂–¥—ë—Ç –Ω–æ–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ, —Ç–æ–ª—å–∫–æ –ø–æ–ª–µ–∑–Ω–æ–µ –∏ —Å –∑–∞–±–æ—Ç–æ–π –æ —Ç–µ–±–µ.
üëâ –ü–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ —É–∂–µ –Ω–∞ –ø–æ–¥—Ö–æ–¥–µ. –ê –µ—Å–ª–∏ —á—Ç–æ ‚Äî —è –≤—Å–µ–≥–¥–∞ —Ä—è–¥–æ–º!
*–£–¥–∞—á–∏ —Ç–µ–±–µ! –ü—É—Å—Ç—å —ç—Ç–æ—Ç –∫—É—Ä—Å –ø—Ä–∏–Ω–µ—Å—ë—Ç –ø–æ–ª—å–∑—É –∏ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ!* üåü
`

		// –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π —É—Ä–æ–∫ (day_number = 0)
		lesson := lessonModel.GetLessonByDay(0)
		if lesson == nil {
			bot.Send(tgbotapi.NewMessage(msg.Chat.ID, "–ó–∞–Ω—è—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."))
			return
		}

		helpers.SendLesson(bot, lg, lesson, msg.Chat.ID, welcomeMessage)

		// –ü–æ–º–µ—á–∞–µ–º, —á—Ç–æ —É—Ä–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
		lessonModel.MarkLessonSent(msg.Chat.ID, int(lesson.ID))
	}
}

func HandleCallback(bot *tgbotapi.BotAPI, cb *tgbotapi.CallbackQuery) {
	if cb.Data == "feedback_good" || cb.Data == "feedback_bad" {
		// –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–∑—ã–≤
		db.Conn.Exec("INSERT INTO user_feedback (chat_id, feedback, created_at) VALUES (?, ?, ?)",
			cb.Message.Chat.ID, cb.Data, time.Now())

		// –û—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
		reply := tgbotapi.NewMessage(cb.Message.Chat.ID, "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤!")
		bot.Send(reply)
	}
}
